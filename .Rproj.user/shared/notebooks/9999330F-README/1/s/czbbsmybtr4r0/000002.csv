"0","# Load required packages"
"0","library(fastshap)  # for fast (approximate) Shapley values"
"0","library(mlbench)   # for Friedman 1 benchmark data set"
"0","library(ranger)    # for fast random forest algorithm"
"0",""
"0","# Simulate training data"
"0","set.seed(101)"
"0","trn <- as.data.frame(mlbench.friedman1(3000))"
"0","X <- subset(trn, select = -y)  # feature columns only"
"0",""
"0","# Fit a random forest"
"0","set.seed(102)"
"0","rfo <- ranger(y ~ ., data =  trn)"
"0",""
"0","# Prediction wrapper"
"0","pfun <- function(object, newdata) {"
"0","  predict(object, data = newdata)$predictions"
"0","}"
"0",""
"0","# Compute fast (approximate) Shapley values using 10 Monte Carlo repititions"
"0","system.time({  # estimate run time"
"0","  set.seed(5038)"
"0","  shap <- fastshap(rfo, feature_names = names(X), X = X, pred_wrapper = pfun, "
"0","                   nsim = 10)"
"0","})"
"1","   user "
"1"," system "
"1","elapsed "
"1","
"
"1"," 94.961 "
"1","  4.382 "
"1"," 19.869 "
"1","
"
"0","# Results are returned as a tibble (with the additional ""shap"" class)"
"0","shap"
